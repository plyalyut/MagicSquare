#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1
          0 525 0 28 3 11 #"#lang forge"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 17 3 36 #"--coordinate of a place in the board"
0 0 14 29 1 #"\n"
0 0 23 3 3 #"sig"
0 0 14 3 7 #" Coord "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 3 11 #"    value: "
0 0 23 3 3 #"one"
0 0 14 3 1 #" "
0 0 23 3 3 #"Int"
0 0 14 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 17 3 39 #"--represents Coord * Coord board of Int"
0 0 14 29 1 #"\n"
0 0 23 3 3 #"sig"
0 0 14 3 7 #" Board "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 3 12 #"    places: "
0 0 23 3 3 #"set"
0 0 14 3 19 #" Coord -> Coord -> "
0 0 23 3 3 #"Int"
0 0 14 3 2 #", "
0 0 17 3 19 #"--row->col->N value"
0 0 14 29 1 #"\n"
0 0 14 3 15 #"    diagonal1: "
0 0 23 3 3 #"set"
0 0 14 3 1 #" "
0 0 23 3 3 #"Int"
0 0 14 3 1 #","
0 0 14 29 1 #"\n"
0 0 14 3 15 #"    diagonal2: "
0 0 23 3 3 #"set"
0 0 14 3 1 #" "
0 0 23 3 3 #"Int"
0 0 14 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 23 3 4 #"pred"
0 0 14 3 12 #" structural "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 4 #"    "
0 0 17 3 27 #"-- coord x coord size board"
0 0 14 29 1 #"\n"
0 0 14 3 17 #"    Board.places."
0 0 23 3 3 #"Int"
0 0 14 3 17 #" = Coord -> Coord"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 4 #"    "
0 0 23 3 3 #"all"
0 0 14 3 13 #" c1: Coord | "
0 0 23 3 3 #"all"
0 0 14 3 11 #" c2: Coord "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 17 3 16 #"--all values > 0"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 23 3 3 #"sum"
0 0 24 3 1 #"["
0 0 14 3 12 #"Board.places"
0 0 24 3 1 #"["
0 0 14 3 2 #"c1"
0 0 24 3 2 #"]["
0 0 14 3 2 #"c2"
0 0 24 3 2 #"]]"
0 0 14 3 3 #" > "
0 0 21 3 1 #"0"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 17 3 23 #"--one int per x,y coord"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 23 3 3 #"one"
0 0 14 3 13 #" Board.places"
0 0 24 3 1 #"["
0 0 14 3 2 #"c1"
0 0 24 3 2 #"]["
0 0 14 3 2 #"c2"
0 0 24 3 1 #"]"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 17 3 48 #"--coord is in range 0 -> (board side length - 1)"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 23 3 3 #"sum"
0 0 24 3 1 #"["
0 0 14 3 8 #"c1.value"
0 0 24 3 1 #"]"
0 0 14 3 4 #" >= "
0 0 21 3 1 #"0"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 23 3 3 #"sum"
0 0 24 3 1 #"["
0 0 14 3 8 #"c1.value"
0 0 24 3 1 #"]"
0 0 14 3 3 #" < "
0 0 23 3 1 #"#"
0 0 24 3 1 #"("
0 0 14 3 5 #"Coord"
0 0 24 3 1 #")"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 17 3 40 #"--no two coordinates have the same value"
0 0 14 29 1 #"\n"
0 0 14 3 17 #"        c1 != c2 "
0 0 23 3 7 #"implies"
0 0 14 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 20 #"c1.value != c2.value"
0 0 24 3 1 #")"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 17 3 41 #"--values in the first diagonal (TL -> BR)"
0 0 14 29 1 #"\n"
0 0 14 3 16 #"        c1 = c2 "
0 0 23 3 7 #"implies"
0 0 14 3 13 #" Board.places"
0 0 24 3 1 #"["
0 0 14 3 2 #"c1"
0 0 24 3 2 #"]["
0 0 14 3 2 #"c2"
0 0 24 3 1 #"]"
0 0 14 3 1 #" "
0 0 23 3 2 #"in"
0 0 14 3 16 #" Board.diagonal1"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 23 3 4 #"else"
0 0 14 3 13 #" Board.places"
0 0 24 3 1 #"["
0 0 14 3 2 #"c1"
0 0 24 3 2 #"]["
0 0 14 3 2 #"c2"
0 0 24 3 1 #"]"
0 0 14 3 1 #" "
0 0 23 3 3 #"not"
0 0 14 3 1 #" "
0 0 23 3 2 #"in"
0 0 14 3 16 #" Board.diagonal1"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 17 3 42 #"--values in the second diagonal (TR -> BL)"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 17 3 83
(4
 #"--if it is in second diagonal, the sum of two coordinates = (board s"
 #"ide length - 1)"
) 0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 23 3 3 #"add"
0 0 24 3 1 #"["
0 0 23 3 3 #"sum"
0 0 24 3 1 #"["
0 0 14 3 8 #"c1.value"
0 0 24 3 1 #"]"
0 0 14 3 2 #", "
0 0 23 3 3 #"sum"
0 0 24 3 1 #"["
0 0 14 3 8 #"c2.value"
0 0 24 3 2 #"]]"
0 0 14 3 3 #" = "
0 0 23 3 3 #"max"
0 0 24 3 1 #"["
0 0 14 3 11 #"Coord.value"
0 0 24 3 1 #"]"
0 0 14 3 1 #" "
0 0 23 3 7 #"implies"
0 0 14 3 13 #" Board.places"
0 0 24 3 1 #"["
0 0 14 3 2 #"c1"
0 0 24 3 2 #"]["
0 0 14 3 2 #"c2"
0 0 24 3 1 #"]"
0 0 14 3 1 #" "
0 0 23 3 2 #"in"
0 0 14 3 16 #" Board.diagonal2"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 23 3 4 #"else"
0 0 14 3 13 #" Board.places"
0 0 24 3 1 #"["
0 0 14 3 2 #"c1"
0 0 24 3 2 #"]["
0 0 14 3 2 #"c2"
0 0 24 3 1 #"]"
0 0 14 3 1 #" "
0 0 23 3 3 #"not"
0 0 14 3 1 #" "
0 0 23 3 2 #"in"
0 0 14 3 16 #" Board.diagonal2"
0 0 14 29 1 #"\n"
0 0 14 3 4 #"    "
0 0 24 3 1 #"}"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 4 #"    "
0 0 14 29 1 #"\n"
0 0 14 3 4 #"    "
0 0 23 3 3 #"all"
0 0 14 3 4 #" n: "
0 0 23 3 3 #"Int"
0 0 14 3 3 #" | "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 17 3 40 #"--only ints in board can be in diagonals"
0 0 14 29 1 #"\n"
0 0 14 3 10 #"        n "
0 0 23 3 2 #"in"
0 0 14 3 17 #" Board.diagonal1 "
0 0 23 3 7 #"implies"
0 0 14 3 1 #" "
0 0 23 3 3 #"one"
0 0 14 3 7 #" Coord."
0 0 24 3 1 #"("
0 0 14 3 14 #"Board.places.n"
0 0 24 3 1 #")"
0 0 14 29 1 #"\n"
0 0 14 3 10 #"        n "
0 0 23 3 2 #"in"
0 0 14 3 17 #" Board.diagonal2 "
0 0 23 3 7 #"implies"
0 0 14 3 1 #" "
0 0 23 3 3 #"one"
0 0 14 3 7 #" Coord."
0 0 24 3 1 #"("
0 0 14 3 14 #"Board.places.n"
0 0 24 3 1 #")"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 23 3 4 #"lone"
0 0 14 3 22 #" Board.places.n.Coord "
0 0 17 3 21 #"-- zero/one col per N"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 23 3 4 #"lone"
0 0 14 3 7 #" Coord."
0 0 24 3 1 #"("
0 0 14 3 14 #"Board.places.n"
0 0 24 3 1 #")"
0 0 14 3 1 #" "
0 0 17 3 21 #"-- zero/one row per N"
0 0 14 29 1 #"\n"
0 0 14 3 4 #"    "
0 0 24 3 1 #"}"
0 0 14 3 2 #"  "
0 0 14 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 23 3 4 #"pred"
0 0 14 3 14 #" magic_square "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 3 3 #"   "
0 0 23 3 3 #"sum"
0 0 24 3 1 #"["
0 0 14 3 15 #"Board.diagonal1"
0 0 24 3 1 #"]"
0 0 14 3 3 #" = "
0 0 23 3 3 #"sum"
0 0 24 3 1 #"["
0 0 14 3 15 #"Board.diagonal2"
0 0 24 3 1 #"]"
0 0 14 29 1 #"\n"
0 0 14 3 3 #"   "
0 0 23 3 3 #"all"
0 0 14 3 11 #" c1: Coord "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 3 7 #"       "
0 0 23 3 3 #"sum"
0 0 24 3 1 #"["
0 0 14 3 15 #"Board.diagonal1"
0 0 24 3 1 #"]"
0 0 14 3 3 #" = "
0 0 23 3 3 #"sum"
0 0 24 3 2 #"[("
0 0 14 3 12 #"Board.places"
0 0 24 3 1 #"["
0 0 14 3 2 #"c1"
0 0 24 3 2 #"]["
0 0 14 3 5 #"Coord"
0 0 24 3 3 #"])]"
0 0 14 29 1 #"\n"
0 0 14 3 7 #"       "
0 0 23 3 3 #"sum"
0 0 24 3 1 #"["
0 0 14 3 15 #"Board.diagonal1"
0 0 24 3 1 #"]"
0 0 14 3 3 #" = "
0 0 23 3 3 #"sum"
0 0 24 3 2 #"[("
0 0 14 3 12 #"Board.places"
0 0 24 3 1 #"["
0 0 14 3 5 #"Coord"
0 0 24 3 2 #"]["
0 0 14 3 2 #"c1"
0 0 24 3 3 #"])]"
0 0 14 29 1 #"\n"
0 0 14 3 3 #"   "
0 0 24 3 1 #"}"
0 0 14 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 17 3 67
#"-- Value for each of the vertical, horizontal columns to sum up to."
0 0 14 29 1 #"\n"
0 0 23 3 4 #"pred"
0 0 14 3 13 #" sum_to_value"
0 0 24 3 1 #"["
0 0 14 3 11 #"sum_value: "
0 0 23 3 3 #"Int"
0 0 24 3 1 #"]"
0 0 14 3 1 #" "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 3 3 #"   "
0 0 23 3 3 #"sum"
0 0 24 3 1 #"["
0 0 14 3 15 #"Board.diagonal1"
0 0 24 3 1 #"]"
0 0 14 3 12 #" = sum_value"
0 0 14 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 23 3 4 #"pred"
0 0 14 3 12 #" successive "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 3 4 #"    "
0 0 17 3 14 #"-- Starts at 1"
0 0 14 29 1 #"\n"
0 0 14 3 4 #"    "
0 0 23 3 3 #"min"
0 0 24 3 1 #"["
0 0 14 3 6 #"places"
0 0 24 3 1 #"["
0 0 14 3 5 #"Board"
0 0 24 3 2 #"]["
0 0 14 3 5 #"Coord"
0 0 24 3 2 #"]["
0 0 14 3 5 #"Coord"
0 0 24 3 2 #"]]"
0 0 14 3 3 #" = "
0 0 21 3 1 #"1"
0 0 14 3 1 #" "
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 3 4 #"    "
0 0 17 3 29 #"-- All integers are succesive"
0 0 14 29 1 #"\n"
0 0 14 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 6 #"places"
0 0 24 3 1 #"["
0 0 14 3 5 #"Board"
0 0 24 3 2 #"]["
0 0 14 3 5 #"Coord"
0 0 24 3 2 #"]["
0 0 14 3 5 #"Coord"
0 0 24 3 2 #"])"
0 0 14 3 8 #".succ + "
0 0 23 3 4 #"sing"
0 0 24 3 1 #"["
0 0 21 3 1 #"1"
0 0 24 3 1 #"]"
0 0 14 3 3 #" - "
0 0 23 3 4 #"sing"
0 0 24 3 1 #"["
0 0 23 3 3 #"max"
0 0 24 3 2 #"[("
0 0 14 3 6 #"places"
0 0 24 3 1 #"["
0 0 14 3 5 #"Board"
0 0 24 3 2 #"]["
0 0 14 3 5 #"Coord"
0 0 24 3 2 #"]["
0 0 14 3 5 #"Coord"
0 0 24 3 2 #"])"
0 0 14 3 5 #".succ"
0 0 24 3 2 #"]]"
0 0 14 3 9 #" = places"
0 0 24 3 1 #"["
0 0 14 3 5 #"Board"
0 0 24 3 2 #"]["
0 0 14 3 5 #"Coord"
0 0 24 3 2 #"]["
0 0 14 3 5 #"Coord"
0 0 24 3 1 #"]"
0 0 14 29 1 #"\n"
0 0 14 3 8 #"        "
0 0 14 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 17 3 61
#"---------------------------Tests-----------------------------"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 17 3 16 #"--  no 2x2 cases"
0 0 14 29 1 #"\n"
0 0 17 3 1 #"-"
0 0 17 3 4 #"-run"
0 0 17 3 2 #" {"
0 0 14 29 1 #"\n"
0 0 17 3 1 #"-"
0 0 17 3 15 #"-    structural"
0 0 14 29 1 #"\n"
0 0 17 3 1 #"-"
0 0 17 3 17 #"-    magic_square"
0 0 14 29 1 #"\n"
0 0 17 3 1 #"-"
0 0 17 3 2 #"-}"
0 0 17 3 1 #" "
0 0 17 3 3 #"for"
0 0 17 3 1 #" "
0 0 17 3 7 #"exactly"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 8 #" Board, "
0 0 17 3 7 #"exactly"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 8 #" Coord, "
0 0 17 3 1 #"4"
0 0 17 3 4 #" Int"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 17 3 28 #"-- 3x3 case summing up to 15"
0 0 14 29 1 #"\n"
0 0 23 3 3 #"run"
0 0 14 3 1 #" "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 3 14 #"    structural"
0 0 14 29 1 #"\n"
0 0 14 3 16 #"    magic_square"
0 0 14 29 1 #"\n"
0 0 14 3 14 #"    successive"
0 0 14 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 14 3 1 #" "
0 0 23 3 3 #"for"
0 0 14 3 1 #" "
0 0 23 3 7 #"exactly"
0 0 14 3 1 #" "
0 0 21 3 1 #"1"
0 0 14 3 8 #" Board, "
0 0 23 3 7 #"exactly"
0 0 14 3 1 #" "
0 0 21 3 1 #"3"
0 0 14 3 8 #" Coord, "
0 0 21 3 1 #"5"
0 0 14 3 1 #" "
0 0 23 3 3 #"Int"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 17 3 20 #"-- 4x4 case solution"
0 0 14 29 1 #"\n"
0 0 23 3 3 #"run"
0 0 14 3 1 #" "
0 0 24 3 1 #"{"
0 0 14 29 1 #"\n"
0 0 14 3 14 #"    structural"
0 0 14 29 1 #"\n"
0 0 14 3 16 #"    magic_square"
0 0 14 29 1 #"\n"
0 0 14 3 14 #"    successive"
0 0 14 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 14 3 1 #" "
0 0 23 3 3 #"for"
0 0 14 3 1 #" "
0 0 23 3 7 #"exactly"
0 0 14 3 1 #" "
0 0 21 3 1 #"1"
0 0 14 3 8 #" Board, "
0 0 23 3 7 #"exactly"
0 0 14 3 1 #" "
0 0 21 3 1 #"4"
0 0 14 3 8 #" Coord, "
0 0 21 3 1 #"6"
0 0 14 3 1 #" "
0 0 23 3 3 #"Int"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 17 3 2 #"/*"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"Notes:"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"--7 int gives us negative numbers and positive numbers"
0 0 17 29 1 #"\n"
0 0 17 3 62
#"--right now we are not using all of the numbers we are getting"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"--maybe try to work with negative numbers?"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"--talk to Tim about how to improve"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"--Z3??"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"*/"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0 0 14 29 1 #"\n"
0           0
